
#define CT complex<T>

#define DefHR(T)\
template T Householder_Reflect(const MatrixView<T>& m, T& det);  \
template void Householder_Unpack(const VectorView<T>& v, T beta); \
template void Householder_Unpack(const MatrixView<T>& m, T beta); \

DefHR(T);
DefHR(CT);

#undef DefHR

#define DefMult(T1,T2)\
template void Householder_Mult(const GenVector<T1>& v, T1 beta, \
    const MatrixView<T2>& m); \
template void Householder_Mult(const GenVector<T1>& v, T1 beta, \
    const VectorView<T2>& x); \

DefMult(T,T);
DefMult(T,CT);
DefMult(CT,CT);

#undef DefMult

#undef CT
