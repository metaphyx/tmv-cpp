
#define CT std::complex<T>

#define DefGiv1(T) \
  template Givens<T > GivensRotate(T& x, T& y); \

DefGiv1(T)
#ifdef INST_COMPLEX
DefGiv1(CT)
#endif
  
#define DefGiv2(RT,Ts,T) \
  template void GivensMult(RT c, Ts s, T& x, T& y); \
  template void GivensMult(RT c, Ts s, VectorView<T > v0, \
      VectorView<T > v1); \
  template void GivensSymMult(RT c, Ts s, T& x, T& y, T& z); \
  template void GivensHermMult(RT c, Ts s, T& x, T& y, T& z); \

DefGiv2(T,T,T)
#ifdef INST_COMPLEX
DefGiv2(T,T,CT)
DefGiv2(T,CT,CT)
#endif

#undef DefGiv1
#undef DefGiv2

#if 0
#ifdef INST_COMPLEX
template void GivensMult(T c, CT s, ConjRef<CT > x, ConjRef<CT > y); 
template void GivensMult(T c, T s, ConjRef<CT > x, ConjRef<CT > y); 
template void GivensMult(T c, CT s, VarConjRef<CT > x, VarConjRef<CT > y); 
template void GivensMult(T c, T s, VarConjRef<CT > x, VarConjRef<CT > y); 
#endif
#endif

#undef CT

