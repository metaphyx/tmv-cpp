//#define DONTMIXWITHREG

template <class T> void TestAllSmallVector();
template <class T> void TestAllSmallMatrix();
template <class T> void TestAllSmallMatrixA();
template <class T> void TestAllSmallMatrixB();
template <class T> void TestSmallMatrix_Sub1();
template <class T> void TestSmallMatrix_Sub2();
template <class T> void TestSmallMatrix_Sub3();
template <class T> void TestSmallMatrix_Sub4();
template <class T> void TestSmallMatrix_Sub5();
template <class T> void TestAllSmallMatrixDiv();
template <class T> void TestSmallMatrixArith_A1();
template <class T> void TestSmallMatrixArith_A2a();
template <class T> void TestSmallMatrixArith_A2b();
template <class T> void TestSmallMatrixArith_A2c();
template <class T> void TestSmallMatrixArith_A3a();
template <class T> void TestSmallMatrixArith_A3b();
template <class T> void TestSmallMatrixArith_A3c();
template <class T> void TestSmallMatrixArith_A4a();
template <class T> void TestSmallMatrixArith_A4b();
template <class T> void TestSmallMatrixArith_A4c();
template <class T> void TestSmallMatrixArith_A5a();
template <class T> void TestSmallMatrixArith_A5b();
template <class T> void TestSmallMatrixArith_A5c();
template <class T> void TestSmallMatrixArith_A6a();
template <class T> void TestSmallMatrixArith_A6b();
template <class T> void TestSmallMatrixArith_A6c();
template <class T> void TestSmallMatrixArith_B1();
template <class T> void TestSmallMatrixArith_B2a();
template <class T> void TestSmallMatrixArith_B2b();
template <class T> void TestSmallMatrixArith_B3a();
template <class T> void TestSmallMatrixArith_B3b();
template <class T> void TestSmallMatrixArith_B4a();
template <class T> void TestSmallMatrixArith_B4b();
template <class T> void TestSmallMatrixArith_B4c();
template <class T> void TestSmallMatrixArith_B5a();
template <class T> void TestSmallMatrixArith_B5b();
template <class T> void TestSmallMatrixArith_B5c();
template <class T> void TestSmallMatrixArith_B6a();
template <class T> void TestSmallMatrixArith_B6b();

