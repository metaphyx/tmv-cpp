
#define CT std::complex<T>

#define Def1(RT,T) \
  template QuotXD<T,T > GenDiagMatrix<T >::QInverse() const; \
  template void GenDiagMatrix<T >::write(const TMV_Writer& writer) const; \
  template void DiagMatrixView<T,CStyle>::read(const TMV_Reader& reader); \

Def1(T,T)
#ifdef INST_COMPLEX
Def1(T,CT)
#endif

#undef Def1

#ifndef TISINT
#define Def1b(RT,T) \
  template T GenDiagMatrix<T >::det() const; \
  template RT GenDiagMatrix<T >::logDet(T* sign) const; \
  template DiagMatrixView<T,CStyle>& DiagMatrixView<T,CStyle>::invertSelf(); \
  template void GenDiagMatrix<T >::doMakeInverseATA(DiagMatrixView<T > ) const;\
  template void GenDiagMatrix<T >::doMakeInverseATA(MatrixView<T > ) const; \

Def1b(T,T)
#ifdef INST_COMPLEX
Def1b(T,CT)
#endif

#undef Def1b
#endif

#define Def2(T,A) \
  template void DiagMatrix<T,A>::read(const TMV_Reader& reader); \

Def2(T,CStyle)
Def2(T,FortranStyle)
#ifdef INST_COMPLEX
Def2(CT,CStyle)
Def2(CT,FortranStyle)
#endif

#undef Def2

#define Def3(T,T1) \
  template void GenDiagMatrix<T >::doLDivEq(VectorView<T1 > ) const;\
  template void GenDiagMatrix<T >::doLDivEq(MatrixView<T1 > ) const;\
  template void GenDiagMatrix<T >::doMakeInverse(DiagMatrixView<T1 > m) const;\
  template void GenDiagMatrix<T >::doMakeInverse(MatrixView<T1 > m) const;\

Def3(T,T)
#ifdef INST_COMPLEX
Def3(T,CT)
Def3(CT,CT)
#endif

#undef Def3

#define Def3a(T,T1) \
  template <> template <> void GenDiagMatrix<T >::doLDivEq(\
      VectorView<T1 > ) const\
  { TMVAssert(TMV_FALSE); } \
  template <> template <> void GenDiagMatrix<T >::doLDivEq(\
      MatrixView<T1 > ) const\
  { TMVAssert(TMV_FALSE); } \
  template <> template <> void GenDiagMatrix<T >::doMakeInverse( \
      DiagMatrixView<T1 > ) const\
  { TMVAssert(TMV_FALSE); } \
  template <> template <> void GenDiagMatrix<T >::doMakeInverse( \
      MatrixView<T1 > ) const\
  { TMVAssert(TMV_FALSE); } \

#ifdef INST_COMPLEX
Def3a(CT,T)
#endif

#undef Def3a

#define Def4(T,T1,T0) \
  template void GenDiagMatrix<T >::doLDiv( \
      const GenVector<T1 >& , VectorView<T0 > ) const;\
  template void GenDiagMatrix<T >::doLDiv( \
      const GenMatrix<T1 >& , MatrixView<T0 > ) const;\

Def4(T,T,T)
#ifdef INST_COMPLEX
Def4(T,T,CT)
Def4(T,CT,CT)
Def4(CT,T,CT)
Def4(CT,CT,CT)
#endif

#undef Def4

#define Def4a(T,T1,T0) \
  template <> template <> void GenDiagMatrix<T >::doLDiv( \
      const GenVector<T1 >& , VectorView<T0 > ) const\
      { TMVAssert(TMV_FALSE); } \
  template <> template <> void GenDiagMatrix<T >::doLDiv( \
      const GenMatrix<T1 >& , MatrixView<T0 > ) const\
      { TMVAssert(TMV_FALSE); } \

#ifdef INST_COMPLEX
Def4a(CT,CT,T)
Def4a(T,CT,T)
Def4a(CT,T,T)
#endif

#undef Def4a

#undef CT


