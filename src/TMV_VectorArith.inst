
#define CT std::complex<T>

#define Def0(T)\
  template const T* VectorComposite<T >::cptr() const; \
  template VectorComposite<T >::~VectorComposite(); \
  template void MultXV(const T x, const VectorView<T >& v2); \

Def0(T)
#ifdef INST_COMPLEX
Def0(CT)
#endif

#undef Def0

#define Def1(T,T1)\
  template void AddVV(const T x, const GenVector<T1 >& v1, \
      const VectorView<T >& v2);  \
  template void MultXV(const T x, const GenVector<T1 >& v1, \
      const VectorView<T >& v2); \
  template void ElementProd(const T alpha, \
      const GenVector<T1 >& x, const VectorView<T >& y);  \
  template T MultVV(const GenVector<T >& v1,\
      const GenVector<T1 >& v2); \

Def1(T,T)
#ifdef INST_COMPLEX
Def1(CT,T)
Def1(CT,CT)
#endif

#undef Def1

#define Def2(T,T1,T2)\
  template void AddVV(const T x1, const GenVector<T1 >& v1, \
      const T x2, const GenVector<T2 >& v2, const VectorView<T >& v0);  \
  template void AddElementProd(const T alpha, \
      const GenVector<T1 >& x, const GenVector<T2 >& y, \
      const VectorView<T >& z);  \

Def2(T,T,T)
#ifdef INST_COMPLEX
Def2(CT,T,T)
Def2(CT,T,CT)
Def2(CT,CT,CT)
#endif

#undef Def2

#undef CT
