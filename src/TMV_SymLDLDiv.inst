
#define CT std::complex<T>

#define DefDivEq(RT1,T1,T2)\
  template void LDL_LDivEq(const GenSymMatrix<T1 >& L,  \
      const GenVector<T1 >& xD, const int* P, \
      const MatrixView<T2 >& m); \
  template void LDL_RDivEq(const GenSymMatrix<T1 >& L,  \
      const GenVector<T1 >& xD, const int* P, \
      const MatrixView<T2 >& m); \

DefDivEq(T,T,T)
#ifdef INST_COMPLEX
DefDivEq(T,T,CT)
DefDivEq(T,CT,CT)
#endif

#undef DefDivEq

#define DefDivEq(RT1,T1,T2)\
  template <> void LDL_LDivEq(const GenSymMatrix<T1 >& ,  \
      const GenVector<T1 >& , const int* , \
      const MatrixView<T2 >& )\
      { TMVAssert(FALSE); }\
  template <> void LDL_RDivEq(const GenSymMatrix<T1 >& ,  \
      const GenVector<T1 >& , const int* , \
      const MatrixView<T2 >& )\
      { TMVAssert(FALSE); }\

#ifdef INST_COMPLEX
DefDivEq(T,CT,T)
#endif

#undef DefDivEq

#undef CT

