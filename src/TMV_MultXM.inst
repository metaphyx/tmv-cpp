
#define CT std::complex<T>

#define DefXM(T)\
  template void MultXM(const T alpha, const MatrixView<T >& A);
  
DefXM(T)
#ifdef INST_COMPLEX
DefXM(CT)
#endif

#undef DefXM

#define DefEl(T,T1)\
  template void ElementProd(const T alpha, \
      const GenMatrix<T1 >& A, const MatrixView<T >& B);  \

DefEl(T,T)
#ifdef INST_COMPLEX
DefEl(CT,T)
DefEl(CT,CT)
#endif

#undef DefEl

#define DefAddEl(T,T1,T2)\
  template void AddElementProd(const T alpha, \
      const GenMatrix<T1 >& A, const GenMatrix<T2 >& B, \
      const MatrixView<T >& C);  \

DefAddEl(T,T,T)
#ifdef INST_COMPLEX
DefAddEl(CT,T,T)
DefAddEl(CT,T,CT)
DefAddEl(CT,CT,T)
DefAddEl(CT,CT,CT)
#endif

#undef DefAddEl

#undef CT

