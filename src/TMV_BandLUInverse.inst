#define CT std::complex<T>

#define DefInv(T,T1) \
template void LU_Inverse(const GenBandMatrix<T1 >& LUx, \
      const int* p, const MatrixView<T >& minv); \

DefInv(T,T)
#ifdef INST_COMPLEX
DefInv(CT,T)
DefInv(CT,CT)
#endif

#undef DefInv

#define DefInv(T,T1) \
template <> void LU_Inverse(const GenBandMatrix<T1 >& , const int* , \
    const MatrixView<T >& ) \
    { TMVAssert(FALSE); } \

#ifdef INST_COMPLEX
DefInv(T,CT)
#endif

#undef DefInv
#define DefInv(T) \
template void Tri_Inverse(const UpperTriMatrixView<T >& minv, int nhi); \

DefInv(T)
#ifdef INST_COMPLEX
DefInv(CT)
#endif

#undef DefInv

#undef CT

