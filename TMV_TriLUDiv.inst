
#define CT complex<T>

template class UpperTriLUDiv<T>;
template class UpperTriLUDiv<CT>;
template class LowerTriLUDiv<T>;
template class LowerTriLUDiv<CT>;

#define DefMV(T1,T2)\
template void TriLDivEq(const GenUpperTriMatrix<T1>& A, \
    const MatrixView<T2>& m); \
template void TriLDivEq(const GenLowerTriMatrix<T1>& A, \
    const MatrixView<T2>& m); \
template void TriLDivEq(const GenUpperTriMatrix<T1>& A, \
    const UpperTriMatrixView<T2>& m); \
template void TriLDivEq(const GenLowerTriMatrix<T1>& A, \
    const LowerTriMatrixView<T2>& m); \

DefMV(T,T);
DefMV(T,CT);
DefMV(CT,CT);

#undef DefMV

#undef CT

