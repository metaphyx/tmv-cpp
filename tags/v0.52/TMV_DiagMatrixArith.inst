
#define CT complex<T>

#define DefMV(T,Ta,Tb)\
  template void MultMV(const T alpha, \
      const GenDiagMatrix<Ta >& A, \
      const GenVector<Tb >& x, const T beta, \
      const VectorView<T >& y);  \
  template void MultMM(const T alpha, \
      const GenDiagMatrix<Ta >& A, \
      const GenMatrix<Tb >& B, const T beta, \
      const MatrixView<T >& C);  \
  template void MultMM(const T alpha, \
      const GenMatrix<Ta >& A, \
      const GenDiagMatrix<Tb >& B, const T beta, \
      const MatrixView<T >& C);  \

DefMV(T,T,T);
DefMV(CT,T,T);
DefMV(CT,T,CT);
DefMV(CT,CT,T);
DefMV(CT,CT,CT);

#undef DefMV

#define DefAdd(T,Ta)\
  template void AddMM(const T alpha, const GenDiagMatrix<Ta >& A, \
      const T beta, const MatrixView<T >& B); \

DefAdd(T,T);
DefAdd(CT,T);
DefAdd(CT,CT);

#undef DefAdd

#undef CT

