
#define CT complex<T>

#define DefMM(T,Ta,Tb)\
  template void MultMM(const T alpha, const GenUpperTriMatrix<Ta>& A, \
      const GenMatrix<Tb>& B, const T beta, const MatrixView<T>& C); \
  template void MultMM(const T alpha, const GenLowerTriMatrix<Ta>& A, \
      const GenMatrix<Tb>& B, const T beta, const MatrixView<T>& C); \
  template void MultMM(const T alpha, const GenUpperTriMatrix<Ta>& A, \
      const GenLowerTriMatrix<Tb>& B, const T beta, const MatrixView<T>& C); \
  template void MultMM(const T alpha, const GenLowerTriMatrix<Ta>& A, \
      const GenUpperTriMatrix<Tb>& B, const T beta, const MatrixView<T>& C); \
  template void MultMM(const T alpha, const GenUpperTriMatrix<Ta>& A, \
      const GenUpperTriMatrix<Tb>& B, const T beta, \
      const UpperTriMatrixView<T>& C); \

DefMM(T,T,T);
DefMM(CT,T,T);
DefMM(CT,T,CT);
DefMM(CT,CT,T);
DefMM(CT,CT,CT);

#undef DefMM

#undef CT
