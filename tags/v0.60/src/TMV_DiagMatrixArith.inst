
#define CT std::complex<T>

template ConstVectorView<T> DiagMatrixComposite<T >::cdiag() const;
#ifdef INST_COMPLEX
template ConstVectorView<CT> DiagMatrixComposite<CT >::cdiag() const;
#endif

#define DefMV(T,Ta,Tb)\
  template void MultMV<true>(const T alpha, const GenDiagMatrix<Ta >& A, \
      const GenVector<Tb >& x, const VectorView<T >& y);  \
  template void MultMV<false>(const T alpha, const GenDiagMatrix<Ta >& A, \
      const GenVector<Tb >& x, const VectorView<T >& y);  \
  template void MultMM<true>(const T alpha, const GenDiagMatrix<Ta >& A, \
      const GenMatrix<Tb >& B, const MatrixView<T >& C);  \
  template void MultMM<false>(const T alpha, const GenDiagMatrix<Ta >& A, \
      const GenMatrix<Tb >& B, const MatrixView<T >& C);  \

DefMV(T,T,T)
#ifdef INST_COMPLEX
DefMV(CT,T,T)
DefMV(CT,T,CT)
DefMV(CT,CT,T)
DefMV(CT,CT,CT)
#endif

#undef DefMV

#define DefAdd(T,Ta,Tb)\
  template void AddMM(const T alpha, const GenDiagMatrix<Ta >& A, \
      const T beta, const GenMatrix<Tb >& B, const MatrixView<T >& C); \

DefAdd(T,T,T)
#ifdef INST_COMPLEX
DefAdd(CT,T,T)
DefAdd(CT,T,CT)
DefAdd(CT,CT,T)
DefAdd(CT,CT,CT)
#endif

#undef DefAdd

#undef CT

