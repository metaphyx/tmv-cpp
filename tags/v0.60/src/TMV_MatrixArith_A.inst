
#define CT std::complex<T>

#define Def1(T) \
  template const T* MatrixComposite<T >::cptr() const; \
  template int MatrixComposite<T >::stepi() const; \
  template int MatrixComposite<T >::stepj() const; \
  template size_t MatrixComposite<T >::ls() const; \

Def1(T)
#ifdef INST_COMPLEX
Def1(CT)
#endif

#define DefMV(T,Ta,Tx)\
  template void MultMV<true>(const T alpha, const GenMatrix<Ta >& A, \
      const GenVector<Tx >& x, const VectorView<T >& y); \
  template void MultMV<false>(const T alpha, const GenMatrix<Ta >& A, \
      const GenVector<Tx >& x, const VectorView<T >& y); \
  template void UnitAMultMV1<true,true,T,Ta,Tx >( \
      const GenMatrix<Ta >& A, const GenVector<Tx >& x, \
      const VectorView<T >& y); \
  template void UnitAMultMV1<true,false,T,Ta,Tx >( \
      const GenMatrix<Ta >& A, const GenVector<Tx >& x, \
      const VectorView<T >& y); \
  template void UnitAMultMV1<false,true,T,Ta,Tx >( \
      const GenMatrix<Ta >& A, const GenVector<Tx >& x, \
      const VectorView<T >& y); \
  template void UnitAMultMV1<false,false,T,Ta,Tx >( \
      const GenMatrix<Ta >& A, const GenVector<Tx >& x, \
      const VectorView<T >& y); \

DefMV(T,T,T)
#ifdef INST_COMPLEX
DefMV(CT,T,T)
DefMV(CT,T,CT)
DefMV(CT,CT,T)
DefMV(CT,CT,CT)
#endif

#undef DefMV

#undef CT
