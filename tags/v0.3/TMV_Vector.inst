
#define CT complex<T>

#define DefV(RT,T) \
  template class GenVector<T>; \
  template class VectorView<T>; \
  template class Vector<T>; \
  template void Swap(const VectorView<T>& v1, const VectorView<T>& v2); \
  template void Swap(const VectorView<T>& v1, Vector<T>& v2); \
  template void Swap(Vector<T>& v1, Vector<T>& v2); \
  template bool operator==(const GenVector<T>& v1, const GenVector<T>& v2); \
  template istream& operator>>(istream& fin, const VectorView<T>& v); \
  template istream& operator>>(istream& fin, Vector<T>* v); \

DefV(T,T);
DefV(T,CT);

#undef DefV

#undef CT
