
#define CT std::complex<T>

#define DefDivEq(T,T2)\
template void CH_LDivEq(const GenSymBandMatrix<T >& LL,\
    const MatrixView<T2 >& b); \
template void CH_RDivEq(const GenSymBandMatrix<T >& LL,\
    const MatrixView<T2 >& b); \
template void LDL_LDivEq(const GenSymBandMatrix<T >& LL,\
    const MatrixView<T2 >& b); \
template void LDL_RDivEq(const GenSymBandMatrix<T >& LL,\
    const MatrixView<T2 >& b); \

DefDivEq(T,T)
#ifdef INST_COMPLEX
DefDivEq(T,CT)
DefDivEq(CT,CT)
#endif

#undef DefDivEq

#define DefDivEq(T,T2)\
template <> void CH_LDivEq(const GenSymBandMatrix<T >& ,\
    const MatrixView<T2 >& )\
    { TMVAssert(TMV_FALSE); }\
template <> void CH_RDivEq(const GenSymBandMatrix<T >& ,\
    const MatrixView<T2 >& )\
    { TMVAssert(TMV_FALSE); }\
template <> void LDL_LDivEq(const GenSymBandMatrix<T >& ,\
    const MatrixView<T2 >& )\
    { TMVAssert(TMV_FALSE); }\
template <> void LDL_RDivEq(const GenSymBandMatrix<T >& ,\
    const MatrixView<T2 >& )\
    { TMVAssert(TMV_FALSE); }\

#ifdef INST_COMPLEX
DefDivEq(CT,T)
#endif

#undef DefDivEq

#undef CT
